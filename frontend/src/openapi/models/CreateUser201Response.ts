/* tslint:disable */
/* eslint-disable */
/**
 * User Management System - API
 * This is a User Management & Authentication API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: cocoychris@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import {
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
} from './UserProfile';

/**
 * 
 * @export
 * @interface CreateUser201Response
 */
export interface CreateUser201Response {
    /**
     * Indicates if the user is authenticated. Usually true after sign up. Might be false if there is an error in login.
     * @type {boolean}
     * @memberof CreateUser201Response
     */
    isAuthenticated: boolean;
    /**
     * Indicates if the user's email is verified. Usually false after sign up.
     * @type {boolean}
     * @memberof CreateUser201Response
     */
    isEmailVerified: boolean;
    /**
     * The authentication strategy used to authenticate the user. Only provided if the user is authenticated.
     * @type {string}
     * @memberof CreateUser201Response
     */
    authStrategy?: string;
    /**
     * The CSRF token for the user session. Usually present if the user is authenticated.
     * @type {string}
     * @memberof CreateUser201Response
     */
    csrfToken?: string;
    /**
     * 
     * @type {UserProfile}
     * @memberof CreateUser201Response
     */
    userProfile: UserProfile;
}

/**
 * Check if a given object implements the CreateUser201Response interface.
 */
export function instanceOfCreateUser201Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isAuthenticated" in value;
    isInstance = isInstance && "isEmailVerified" in value;
    isInstance = isInstance && "userProfile" in value;

    return isInstance;
}

export function CreateUser201ResponseFromJSON(json: any): CreateUser201Response {
    return CreateUser201ResponseFromJSONTyped(json, false);
}

export function CreateUser201ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUser201Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isAuthenticated': json['isAuthenticated'],
        'isEmailVerified': json['isEmailVerified'],
        'authStrategy': !exists(json, 'authStrategy') ? undefined : json['authStrategy'],
        'csrfToken': !exists(json, 'csrfToken') ? undefined : json['csrfToken'],
        'userProfile': UserProfileFromJSON(json['userProfile']),
    };
}

export function CreateUser201ResponseToJSON(value?: CreateUser201Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isAuthenticated': value.isAuthenticated,
        'isEmailVerified': value.isEmailVerified,
        'authStrategy': value.authStrategy,
        'csrfToken': value.csrfToken,
        'userProfile': UserProfileToJSON(value.userProfile),
    };
}

