/* tslint:disable */
/* eslint-disable */
/**
 * User Management System - API
 * APIs for user management and authentication. Double CSRF protection is used, therefore, the client must send the CSRF token in both the cookie and the request header for the non-GET requests.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: cocoychris@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckAuthStatus200Response
 */
export interface CheckAuthStatus200Response {
    /**
     * Whether the user is authenticated.
     * @type {boolean}
     * @memberof CheckAuthStatus200Response
     */
    isAuthenticated: boolean;
    /**
     * Whether the user's email is verified.
     * @type {boolean}
     * @memberof CheckAuthStatus200Response
     */
    isEmailVerified: boolean;
    /**
     * The authentication strategy used to authenticate the user. Only provided if the user is authenticated.
     * @type {string}
     * @memberof CheckAuthStatus200Response
     */
    authStrategy?: string;
    /**
     * The CSRF token for the user session. Only provided if the user is authenticated.
     * @type {string}
     * @memberof CheckAuthStatus200Response
     */
    csrfToken?: string;
}

/**
 * Check if a given object implements the CheckAuthStatus200Response interface.
 */
export function instanceOfCheckAuthStatus200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isAuthenticated" in value;
    isInstance = isInstance && "isEmailVerified" in value;

    return isInstance;
}

export function CheckAuthStatus200ResponseFromJSON(json: any): CheckAuthStatus200Response {
    return CheckAuthStatus200ResponseFromJSONTyped(json, false);
}

export function CheckAuthStatus200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckAuthStatus200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isAuthenticated': json['isAuthenticated'],
        'isEmailVerified': json['isEmailVerified'],
        'authStrategy': !exists(json, 'authStrategy') ? undefined : json['authStrategy'],
        'csrfToken': !exists(json, 'csrfToken') ? undefined : json['csrfToken'],
    };
}

export function CheckAuthStatus200ResponseToJSON(value?: CheckAuthStatus200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isAuthenticated': value.isAuthenticated,
        'isEmailVerified': value.isEmailVerified,
        'authStrategy': value.authStrategy,
        'csrfToken': value.csrfToken,
    };
}

