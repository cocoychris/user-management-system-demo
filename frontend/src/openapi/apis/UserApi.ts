/* tslint:disable */
/* eslint-disable */
/**
 * User Management System - API
 * This is a User Management & Authentication API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: cocoychris@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CheckAuthStatus500Response,
  CreateUser201Response,
  CreateUserRequest,
  ErrorSchema,
  GetAllUsers200Response,
  GetMyProfile200Response,
  GetStatistics200Response,
  ResetPassword200Response,
  ResetPasswordRequest,
  UpdateMyProfileRequest,
} from '../models/index';
import {
    CheckAuthStatus500ResponseFromJSON,
    CheckAuthStatus500ResponseToJSON,
    CreateUser201ResponseFromJSON,
    CreateUser201ResponseToJSON,
    CreateUserRequestFromJSON,
    CreateUserRequestToJSON,
    ErrorSchemaFromJSON,
    ErrorSchemaToJSON,
    GetAllUsers200ResponseFromJSON,
    GetAllUsers200ResponseToJSON,
    GetMyProfile200ResponseFromJSON,
    GetMyProfile200ResponseToJSON,
    GetStatistics200ResponseFromJSON,
    GetStatistics200ResponseToJSON,
    ResetPassword200ResponseFromJSON,
    ResetPassword200ResponseToJSON,
    ResetPasswordRequestFromJSON,
    ResetPasswordRequestToJSON,
    UpdateMyProfileRequestFromJSON,
    UpdateMyProfileRequestToJSON,
} from '../models/index';

export interface CreateUserOperationRequest {
    createUserRequest?: CreateUserRequest;
}

export interface ResetPasswordOperationRequest {
    resetPasswordRequest?: ResetPasswordRequest;
}

export interface UpdateMyProfileOperationRequest {
    updateMyProfileRequest?: UpdateMyProfileRequest;
}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI {

    /**
     * Create a user.
     */
    async createUserRaw(requestParameters: CreateUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateUser201Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateUserRequestToJSON(requestParameters.createUserRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateUser201ResponseFromJSON(jsonValue));
    }

    /**
     * Create a user.
     */
    async createUser(requestParameters: CreateUserOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateUser201Response> {
        const response = await this.createUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get all users.
     */
    async getAllUsersRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAllUsers200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetAllUsers200ResponseFromJSON(jsonValue));
    }

    /**
     * Get all users.
     */
    async getAllUsers(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAllUsers200Response> {
        const response = await this.getAllUsersRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get the current user\'s profile.
     */
    async getMyProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMyProfile200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/users/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetMyProfile200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the current user\'s profile.
     */
    async getMyProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMyProfile200Response> {
        const response = await this.getMyProfileRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get the statistics of the users.
     */
    async getStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetStatistics200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/users/statistics`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetStatistics200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the statistics of the users.
     */
    async getStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetStatistics200Response> {
        const response = await this.getStatisticsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Reset the current user\'s password.
     */
    async resetPasswordRaw(requestParameters: ResetPasswordOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResetPassword200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/me/password`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ResetPasswordRequestToJSON(requestParameters.resetPasswordRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResetPassword200ResponseFromJSON(jsonValue));
    }

    /**
     * Reset the current user\'s password.
     */
    async resetPassword(requestParameters: ResetPasswordOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResetPassword200Response> {
        const response = await this.resetPasswordRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update the current user\'s profile.
     */
    async updateMyProfileRaw(requestParameters: UpdateMyProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMyProfile200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/me`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateMyProfileRequestToJSON(requestParameters.updateMyProfileRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetMyProfile200ResponseFromJSON(jsonValue));
    }

    /**
     * Update the current user\'s profile.
     */
    async updateMyProfile(requestParameters: UpdateMyProfileOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMyProfile200Response> {
        const response = await this.updateMyProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
